{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["pageQuery","data","contents","transformContent","post","rawMarkdownBody","sections","edges","forEach","edge","node","frontmatter","section","title","push","path","id","props","Object","keys","map","key","items","createPageProps"],"mappings":"mPAMaA,EAAY,aAmBV,sBAAc,IAAXC,EAAW,EAAXA,KACVC,EAAWC,YAAiBF,EAAKG,KAAKC,iBAEtCC,EAAW,GACjBL,EAAKK,SAASC,MAAMC,SAAQ,SAACC,GAAS,MACTA,EAAKC,KAAKC,YAA7BC,EAD4B,EAC5BA,QAASC,EADmB,EACnBA,MACZP,EAASM,KACZN,EAASM,GAAW,IAEtBN,EAASM,GAASE,KAAK,CACrBD,MAAOA,EACPE,KAAMN,EAAKC,KAAKM,QAIpB,IAAMC,EAAQ,CACZb,KAAM,CACJF,YAEFI,SAAUY,OAAOC,KAAKb,GAAUc,KAAI,SAACC,GACnC,MAAO,CACLR,MAAO,OACPS,MAAOhB,EAASe,QAKtB,OAAO,kBAAC,IAASE,0BAAgBN","file":"component---src-templates-post-tsx-0e6772cb1f696542156d.js","sourcesContent":["import React from \"react\";\nimport Page from \"../components/page\";\nimport { transformContent, Token, pulckHtmlCss } from \"../lib/transform\";\nimport { graphql, Link } from \"gatsby\";\nimport { createPageProps } from \"../pages\";\n\nexport const pageQuery = graphql`\n  query markdown($id: String!) {\n    post: markdownRemark(id: { eq: $id }) {\n      id\n      rawMarkdownBody\n    }\n    sections: allMarkdownRemark {\n      edges {\n        node {\n          id\n          frontmatter {\n            section\n            title\n          }\n        }\n      }\n    }\n  }\n`;\nexport default ({ data }) => {\n  const contents = transformContent(data.post.rawMarkdownBody);\n\n  const sections = {};\n  data.sections.edges.forEach((edge) => {\n    const { section, title } = edge.node.frontmatter;\n    if (!sections[section]) {\n      sections[section] = [];\n    }\n    sections[section].push({\n      title: title,\n      path: edge.node.id,\n    });\n  });\n\n  const props = {\n    post: {\n      contents,\n    },\n    sections: Object.keys(sections).map((key) => {\n      return {\n        title: \"hoge\",\n        items: sections[key],\n      };\n    }),\n  };\n\n  return <Page {...createPageProps(props)} />;\n};\n"],"sourceRoot":""}