{"ast":null,"code":"import matter from \"gray-matter\";\nexport const transformContent = content => {\n  let results = [];\n  let editor = false;\n  let block = \"\";\n  const data = matter(content);\n  results.push({\n    type: \"frontmatter\",\n    value: data.data\n  });\n  data.content.split(\"\\n\").forEach((line, i) => {\n    if (editor) {\n      if (line.includes(\"END_LIVE_EDITOR\")) {\n        editor = false;\n        results.push({\n          type: \"live-editor\",\n          value: block\n        });\n        block = \"\";\n      } else {\n        block += line + \"\\n\";\n      }\n    } else {\n      if (line.includes(\"BEGIN_LIVE_EDITOR\")) {\n        results.push({\n          type: \"markdown\",\n          value: block\n        });\n        block = \"\";\n        editor = true;\n      } else {\n        block += line + \"\\n\";\n      }\n    }\n  });\n  results.push({\n    type: \"markdown\",\n    value: block\n  });\n  results = results.map(token => {\n    let next = token;\n\n    if (token.type === \"live-editor\") {\n      next.value = pulckHtmlCss(token.value);\n    }\n\n    return next;\n  });\n  return results;\n};\n\nfunction pulckHtmlCss(content) {\n  let html = \"\";\n  let css = \"\";\n  let type = \"none\";\n  content.split(\"\\n\").forEach(line => {\n    if (line.includes(\"```\") && line.includes(\"html\")) {\n      type = \"html\";\n      return;\n    }\n\n    if (line.includes(\"```\") && line.includes(\"css\")) {\n      type = \"css\";\n      return;\n    }\n\n    if (line.includes(\"```\")) {\n      type = \"none\";\n      return;\n    }\n\n    if (type === \"html\") {\n      html += line + \"\\n\";\n    }\n\n    if (type === \"css\") {\n      css += line + \"\\n\";\n    }\n  });\n  return {\n    html,\n    css\n  };\n}","map":null,"metadata":{},"sourceType":"module"}