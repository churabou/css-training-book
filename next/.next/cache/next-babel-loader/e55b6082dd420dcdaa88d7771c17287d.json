{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/churabou/study/react/css-tutorial/pages/posts/[page].tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Page from \"../../components/page\";\nimport LiveEditor from \"../../components/liveEditor\";\nimport { pulckHtmlCss } from \"../../lib/transform\";\n\n// これでlinkを外から入れらるようになった。\n// mdからメニューを取得してページングできるはず。\n// ぱすぱらむを取得すれば（static prposで)\nvar createProps = function createProps(sections) {\n  return {\n    LinkComponent: function LinkComponent(item) {\n      return __jsx(\"a\", {\n        href: item.item.path,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }\n      }, item.item.title);\n    },\n    sections: sections\n  };\n};\n\nvar App = function App(_ref) {\n  var _post$contents$find;\n\n  var post = _ref.post,\n      sections = _ref.sections;\n  var menuProps = createProps(sections);\n  var commonCSS = pulckHtmlCss(((_post$contents$find = post.contents.find(function (c) {\n    return c.type === \"common-css\";\n  })) === null || _post$contents$find === void 0 ? void 0 : _post$contents$find.value) || \"\").css;\n\n  var Content = function Content() {\n    return __jsx(\"div\", {\n      style: {\n        padding: \"40px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, post.contents.map(function (content, i) {\n      var key = \"\".concat(content.type, \"-\").concat(i);\n\n      if (content.type === \"markdown\" || content.type === \"common-css\") {\n        return __jsx(MarkdownBlock, {\n          key: key,\n          content: content.value,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 18\n          }\n        });\n      }\n\n      if (content.type === \"frontmatter\") {\n        return __jsx(_MDWapper, {\n          key: key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, __jsx(\"h1\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }, content.value.title));\n      }\n\n      return __jsx(LiveEditor, _extends({\n        key: key\n      }, _objectSpread({\n        commonCSS: commonCSS\n      }, content.value), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 16\n        }\n      }));\n    }));\n  };\n\n  return __jsx(Page, {\n    content: __jsx(Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }),\n    menu: menuProps,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  });\n};\n\n_c = App;\nexport var __N_SSG = true;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/churabou/study/react/css-tutorial/pages/posts/[page].tsx"],"names":["Page","LiveEditor","pulckHtmlCss","createProps","sections","LinkComponent","item","path","title","App","post","menuProps","commonCSS","contents","find","c","type","value","css","Content","padding","map","content","i","key"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AAGA,OAAOC,UAAP,MAAuB,6BAAvB;AAGA,SAAkCC,YAAlC,QAAsD,qBAAtD;;AAiEA;AACA;AACA;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAqC;AACvDC,IAAAA,aAAa,EAAE,uBAACC,IAAD,EAAe;AAC5B,aAAO;AAAG,QAAA,IAAI,EAAEA,IAAI,CAACA,IAAL,CAAUC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BD,IAAI,CAACA,IAAL,CAAUE,KAApC,CAAP;AACD,KAHsD;AAIvDJ,IAAAA,QAAQ,EAARA;AAJuD,GAArC;AAAA,CAApB;;AAOA,IAAMK,GAAoB,GAAG,SAAvBA,GAAuB,OAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfN,QAAe,QAAfA,QAAe;AACnD,MAAMO,SAAS,GAAGR,WAAW,CAACC,QAAD,CAA7B;AAEA,MAAMQ,SAAS,GAAGV,YAAY,CAC5B,wBAAAQ,IAAI,CAACG,QAAL,CAAcC,IAAd,CAAmB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,IAAF,KAAW,YAAlB;AAAA,GAAnB,6EAAoDC,KAApD,KAA6D,EADjC,CAAZ,CAEhBC,GAFF;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,WACd;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,IAAI,CAACG,QAAL,CAAcQ,GAAd,CAAkB,UAACC,OAAD,EAAiBC,CAAjB,EAA+B;AAChD,UAAMC,GAAG,aAAMF,OAAO,CAACN,IAAd,cAAsBO,CAAtB,CAAT;;AACA,UAAID,OAAO,CAACN,IAAR,KAAiB,UAAjB,IAA+BM,OAAO,CAACN,IAAR,KAAiB,YAApD,EAAkE;AAChE,eAAO,MAAC,aAAD;AAAe,UAAA,GAAG,EAAEQ,GAApB;AAAyB,UAAA,OAAO,EAAEF,OAAO,CAACL,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAIK,OAAO,CAACN,IAAR,KAAiB,aAArB,EAAoC;AAClC,eACE,MAAC,SAAD;AAAW,UAAA,GAAG,EAAEQ,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,OAAO,CAACL,KAAR,CAAcT,KAAnB,CADF,CADF;AAKD;;AACD,aAAO,MAAC,UAAD;AAAY,QAAA,GAAG,EAAEgB;AAAjB;AAA4BZ,QAAAA,SAAS,EAATA;AAA5B,SAA0CU,OAAO,CAACL,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAbA,CADH,CADc;AAAA,GAAhB;;AAkBA,SAAO,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AAA4B,IAAA,IAAI,EAAEN,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA1BD;;KAAMF,G;;AA4BN,eAAeA,GAAf","sourcesContent":["import Page from \"../../components/page\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport LiveEditor from \"../../components/liveEditor\";\nimport ReactMarkdown from \"react-markdown\";\nimport styled from \"styled-components\";\nimport { transformContent, Token, pulckHtmlCss } from \"../../lib/transform\";\nimport { Props as MenuProps } from \"../../components/menu\";\n\ninterface Section {\n  title: string;\n  items: {\n    title: string;\n    path: string;\n  }[];\n}\n\nconst fetchSections = (): Section[] => {\n  const postsDirectory = path.join(process.cwd(), \"contents\");\n  const sectionDirectories = fs.readdirSync(postsDirectory);\n  return sectionDirectories.map((section) => {\n    const filenames = fs.readdirSync(path.join(postsDirectory, section));\n    return {\n      title: section,\n      items: filenames.map((name) => ({\n        title: name,\n        path: `${section}.${name}`,\n      })),\n    };\n  });\n};\n\nconst loadContent = (filename: string): Token[] => {\n  const filePath = path.join(process.cwd(), \"contents\", filename);\n  const fileContents = fs.readFileSync(path.join(filePath), \"utf8\");\n  const content = transformContent(fileContents);\n  return content;\n};\n\nexport async function getStaticPaths() {\n  const contents = fetchSections().map((section: Section) =>\n    section.items.map((item) => ({\n      params: { page: item.path },\n    }))\n  );\n  // flatten\n  const paths = Array.prototype.concat.apply([], contents);\n  return { paths, fallback: false };\n}\n\nexport async function getStaticProps({ params }: any) {\n  // HACK section1.demoみたいになっているのでsection1/demoにする\n  const path = params.page.replace(\".\", \"/\");\n  const props: Props = {\n    post: {\n      contents: loadContent(path),\n    },\n    sections: fetchSections(),\n  };\n  return {\n    props,\n  };\n}\n\ninterface Props {\n  post: {\n    contents: Token[];\n  };\n  sections: Section[];\n}\n\n// これでlinkを外から入れらるようになった。\n// mdからメニューを取得してページングできるはず。\n// ぱすぱらむを取得すれば（static prposで)\nconst createProps = (sections: Section[]): MenuProps => ({\n  LinkComponent: (item: any) => {\n    return <a href={item.item.path}>{item.item.title}</a>;\n  },\n  sections,\n});\n\nconst App: React.FC<Props> = ({ post, sections }) => {\n  const menuProps = createProps(sections);\n\n  const commonCSS = pulckHtmlCss(\n    post.contents.find((c) => c.type === \"common-css\")?.value || \"\"\n  ).css;\n\n  const Content = () => (\n    <div style={{ padding: \"40px\" }}>\n      {post.contents.map((content: Token, i: number) => {\n        const key = `${content.type}-${i}`;\n        if (content.type === \"markdown\" || content.type === \"common-css\") {\n          return <MarkdownBlock key={key} content={content.value} />;\n        }\n        if (content.type === \"frontmatter\") {\n          return (\n            <_MDWapper key={key}>\n              <h1>{content.value.title}</h1>\n            </_MDWapper>\n          );\n        }\n        return <LiveEditor key={key} {...{ commonCSS, ...content.value }} />;\n      })}\n    </div>\n  );\n  return <Page content={<Content />} menu={menuProps} />;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}