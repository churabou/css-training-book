{"ast":null,"code":"import matter from \"gray-matter\";\nexport var transformContent = function transformContent(content) {\n  var results = [];\n  var block = \"\";\n  var data = matter(content);\n  results.push({\n    type: \"frontmatter\",\n    value: data.data\n  });\n  var type = \"markdown\";\n  data.content.split(\"\\n\").forEach(function (line, i) {\n    if (line.includes(\"BEGIN_COMMON_CSS\")) {\n      if (block !== \"\") {\n        results.push({\n          type: \"markdown\",\n          value: block\n        });\n      }\n\n      type = \"common-css\";\n      block = \"\";\n      return;\n    }\n\n    if (line.includes(\"BEGIN_LIVE_EDITOR\")) {\n      if (block !== \"\") {\n        results.push({\n          type: \"markdown\",\n          value: block\n        });\n      }\n\n      type = \"live-editor\";\n      block = \"\";\n      return;\n    }\n\n    if (line.includes(\"END_COMMON_CSS\")) {\n      results.push({\n        type: type,\n        value: block\n      });\n      block = \"\";\n      return;\n    }\n\n    if (line.includes(\"END_LIVE_EDITOR\")) {\n      results.push({\n        type: type,\n        value: block\n      });\n      block = \"\";\n      return;\n    }\n\n    block += line + \"\\n\";\n  });\n  results.push({\n    type: \"markdown\",\n    value: block\n  });\n  results = results.map(function (token) {\n    var next = token;\n\n    if (token.type === \"live-editor\") {\n      next.value = pulckHtmlCss(token.value);\n    }\n\n    return next;\n  });\n  return results;\n};\nexport function pulckHtmlCss(content) {\n  var html = \"\";\n  var css = \"\";\n  var type = \"none\";\n  content.split(\"\\n\").forEach(function (line) {\n    if (line.includes(\"```\") && line.includes(\"html\")) {\n      type = \"html\";\n      return;\n    }\n\n    if (line.includes(\"```\") && line.includes(\"css\")) {\n      type = \"css\";\n      return;\n    }\n\n    if (line.includes(\"```\")) {\n      type = \"none\";\n      return;\n    }\n\n    if (type === \"html\") {\n      html += line + \"\\n\";\n    }\n\n    if (type === \"css\") {\n      css += line + \"\\n\";\n    }\n  });\n  return {\n    html: html,\n    css: css\n  };\n}","map":null,"metadata":{},"sourceType":"module"}