{"ast":null,"code":"var _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"/Users/churabou/study/react/css-tutorial/components/editor.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Prism from \"prismjs\"; // FIXME: 自動シンタックスハイライトつきエディター\n\nvar Wrapper = styled.div.withConfig({\n  displayName: \"editor__Wrapper\",\n  componentId: \"e0sqrg-0\"\n})([\".editor{position:relative;height:500px;.title{width:60px;height:20px;position:absolute;top:-20px;left:0;z-index:4;line-height:20px;text-align:center;background:white;color:var(--theme-color);}.sync{position:absolute;padding:10px;top:0;left:0;bottom:0;width:100%;margin:0;font-size:20px;font-family:Consolas,Monaco,\\\"Andale Mono\\\",\\\"Ubuntu Mono\\\",monospace;white-space:pre-wrap;line-height:1.5em;word-wrap:break-word;}textarea{resize:none;color:transparent;background:transparent;caret-color:red;border:none;outline:none;}pre{overflow-y:scroll;z-index:-1;}}\"]);\n_c = Wrapper;\nexport var useCodeEditor = function useCodeEditor(_ref) {\n  _s();\n\n  var language = _ref.language,\n      content = _ref.content;\n\n  var _useState = useState(content),\n      _content = _useState[0],\n      setContent = _useState[1];\n\n  useEffect(function () {\n    Prism.highlightAll();\n  }, [_content]);\n  return {\n    content: _content,\n    setContent: setContent,\n    language: language\n  };\n};\n\n_s(useCodeEditor, \"B8TXaLXNxBV7/TLRf8fBlQxWsGc=\");\n\nvar CodeEditor = function CodeEditor(_ref2) {\n  var content = _ref2.content,\n      setContent = _ref2.setContent,\n      language = _ref2.language;\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"editor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, language), __jsx(\"pre\", {\n    className: \"sync\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"code\", {\n    className: \"language-\".concat(language),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, content)), __jsx(\"textarea\", {\n    value: content,\n    className: \"sync\",\n    onChange: function onChange(e) {\n      return setContent(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  })));\n}; // tmp jsut preview\n\n\n_c2 = CodeEditor;\n\nvar _CodeEditor = function _CodeEditor(_ref3) {\n  var content = _ref3.content,\n      setContent = _ref3.setContent,\n      language = _ref3.language;\n  return __jsx(\"div\", {\n    style: {\n      overflox: \"scroll\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }\n  }, __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(\"code\", {\n    className: \"language-\".concat(language),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, content)));\n};\n\nexport default _CodeEditor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CodeEditor\");","map":{"version":3,"sources":["/Users/churabou/study/react/css-tutorial/components/editor.tsx"],"names":["React","useState","useEffect","styled","Prism","Wrapper","div","useCodeEditor","language","content","_content","setContent","highlightAll","CodeEditor","e","target","value","_CodeEditor","overflox"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AAEA,IAAMC,OAAO,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,ojBAAb;KAAMD,O;AAgDN,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAMvB;AAAA;;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,OAII,QAJJA,OAII;;AAAA,kBAC2BR,QAAQ,CAACQ,OAAD,CADnC;AAAA,MACGC,QADH;AAAA,MACaC,UADb;;AAEJT,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,KAAK,CAACQ,YAAN;AACD,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;AAGA,SAAO;AACLD,IAAAA,OAAO,EAAEC,QADJ;AAELC,IAAAA,UAAU,EAAVA,UAFK;AAGLH,IAAAA,QAAQ,EAARA;AAHK,GAAP;AAKD,CAhBM;;GAAMD,a;;AAiBb,IAAMM,UAIJ,GAAG,SAJCA,UAID;AAAA,MAAGJ,OAAH,SAAGA,OAAH;AAAA,MAAYE,UAAZ,SAAYA,UAAZ;AAAA,MAAwBH,QAAxB,SAAwBA,QAAxB;AAAA,SACH,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,QAAxB,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,qBAAcA,QAAd,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CC,OAA1C,CADF,CAFF,EAKE;AACE,IAAA,KAAK,EAAEA,OADT;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,QAAQ,EAAE,kBAACK,CAAD;AAAA,aAAYH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADG;AAAA,CAJL,C,CAoBA;;;MApBMH,U;;AAqBN,IAAMI,WAIJ,GAAG,SAJCA,WAID;AAAA,MAAGR,OAAH,SAAGA,OAAH;AAAA,MAAYE,UAAZ,SAAYA,UAAZ;AAAA,MAAwBH,QAAxB,SAAwBA,QAAxB;AAAA,SACH;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,qBAAcV,QAAd,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CC,OAA1C,CADF,CADF,CADG;AAAA,CAJL;;AAYA,eAAeQ,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Prism from \"prismjs\";\n\n// FIXME: 自動シンタックスハイライトつきエディター\n\nconst Wrapper = styled.div`\n  .editor {\n    position: relative;\n    height: 500px;\n    .title {\n      width: 60px;\n      height: 20px;\n      position: absolute;\n      top: -20px;\n      left: 0;\n      z-index: 4;\n      line-height: 20px;\n      text-align: center;\n      background: white;\n      color: var(--theme-color);\n    }\n\n    .sync {\n      position: absolute;\n      padding: 10px;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      width: 100%;\n      margin: 0;\n      font-size: 20px;\n      font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n      white-space: pre-wrap;\n      line-height: 1.5em;\n      word-wrap: break-word;\n    }\n\n    textarea {\n      resize: none;\n      color: transparent;\n      background: transparent;\n      caret-color: red;\n      border: none;\n      outline: none;\n    }\n\n    pre {\n      overflow-y: scroll;\n      z-index: -1;\n    }\n  }\n`;\n\nexport const useCodeEditor = ({\n  language,\n  content,\n}: {\n  language: string;\n  content: string;\n}) => {\n  const [_content, setContent] = useState(content);\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [_content]);\n  return {\n    content: _content,\n    setContent,\n    language,\n  };\n};\nconst CodeEditor: React.FC<{\n  language: string;\n  content: string;\n  setContent: (content: string) => void;\n}> = ({ content, setContent, language }) => (\n  <Wrapper>\n    <div className=\"editor\">\n      <div className=\"title\">{language}</div>\n      <pre className=\"sync\">\n        <code className={`language-${language}`}>{content}</code>\n      </pre>\n      <textarea\n        value={content}\n        className=\"sync\"\n        onChange={(e: any) => setContent(e.target.value)}\n      />\n    </div>\n  </Wrapper>\n);\n\n// tmp jsut preview\nconst _CodeEditor: React.FC<{\n  language: string;\n  content: string;\n  setContent: (content: string) => void;\n}> = ({ content, setContent, language }) => (\n  <div style={{ overflox: \"scroll\" }}>\n    <pre>\n      <code className={`language-${language}`}>{content}</code>\n    </pre>\n  </div>\n);\n\nexport default _CodeEditor;\n"]},"metadata":{},"sourceType":"module"}