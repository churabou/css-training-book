{"ast":null,"code":"var _jsxFileName = \"/Users/churabou/study/react/css-tutorial/components/editor.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Prism from \"prismjs\"; // FIXME: 自動シンタックスハイライトつきエディター\n\nconst Wrapper = styled.div.withConfig({\n  displayName: \"editor__Wrapper\",\n  componentId: \"e0sqrg-0\"\n})([\".editor{position:relative;overflow-y:scroll;.title{width:60px;height:20px;position:absolute;top:-20px;left:0;z-index:4;line-height:20px;text-align:center;background:white;color:var(--theme-color);}.sync{position:absolute;padding:10px;top:0;left:0;bottom:0;width:100%;margin:0;font-size:20px;font-family:Consolas,Monaco,\\\"Andale Mono\\\",\\\"Ubuntu Mono\\\",monospace;white-space:pre-wrap;line-height:1.5em;word-wrap:break-word;}textarea{resize:none;color:transparent;background:transparent;caret-color:red;border:none;outline:none;}pre{pointer-events:none;overflow-y:auto;z-index:-1;}}\"]);\nexport const useCodeEditor = ({\n  language,\n  content\n}) => {\n  const {\n    0: _content,\n    1: setContent\n  } = useState(content);\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [_content]);\n  return {\n    content: _content,\n    setContent,\n    language\n  };\n};\n\nconst CodeEditor = ({\n  content,\n  setContent,\n  language\n}) => __jsx(Wrapper, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }\n}, __jsx(\"div\", {\n  className: \"editor\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }\n}, language), __jsx(\"pre\", {\n  className: \"sync\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }\n}, __jsx(\"code\", {\n  className: `language-${language}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }\n}, content)), __jsx(\"textarea\", {\n  value: content,\n  className: \"sync\",\n  onChange: e => setContent(e.target.value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }\n})));\n\nexport default CodeEditor;","map":{"version":3,"sources":["/Users/churabou/study/react/css-tutorial/components/editor.tsx"],"names":["React","useState","useEffect","styled","Prism","Wrapper","div","useCodeEditor","language","content","_content","setContent","highlightAll","CodeEditor","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,2kBAAb;AAkDA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAC5BC,EAAAA,QAD4B;AAE5BC,EAAAA;AAF4B,CAAD,KAMvB;AACJ,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAyBV,QAAQ,CAACQ,OAAD,CAAvC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACQ,YAAN;AACD,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;AAGA,SAAO;AACLD,IAAAA,OAAO,EAAEC,QADJ;AAELC,IAAAA,UAFK;AAGLH,IAAAA;AAHK,GAAP;AAKD,CAhBM;;AAiBP,MAAMK,UAIJ,GAAG,CAAC;AAAEJ,EAAAA,OAAF;AAAWE,EAAAA,UAAX;AAAuBH,EAAAA;AAAvB,CAAD,KACH,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBA,QAAxB,CADF,EAEE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAG,YAAWA,QAAS,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA0CC,OAA1C,CADF,CAFF,EAKE;AACE,EAAA,KAAK,EAAEA,OADT;AAEE,EAAA,SAAS,EAAC,MAFZ;AAGE,EAAA,QAAQ,EAAGK,CAAD,IAAYH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADF,CALF;;AAoBA,eAAeH,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Prism from \"prismjs\";\n\n// FIXME: 自動シンタックスハイライトつきエディター\n\nconst Wrapper = styled.div`\n  .editor {\n    position: relative;\n\n    overflow-y: scroll;\n    .title {\n      width: 60px;\n      height: 20px;\n      position: absolute;\n      top: -20px;\n      left: 0;\n      z-index: 4;\n      line-height: 20px;\n      text-align: center;\n      background: white;\n      color: var(--theme-color);\n    }\n\n    .sync {\n      position: absolute;\n      padding: 10px;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      width: 100%;\n      margin: 0;\n      font-size: 20px;\n      font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\n      white-space: pre-wrap;\n      line-height: 1.5em;\n      word-wrap: break-word;\n    }\n\n    textarea {\n      resize: none;\n      color: transparent;\n      background: transparent;\n      caret-color: red;\n      border: none;\n      outline: none;\n    }\n\n    pre {\n      pointer-events: none;\n      overflow-y: auto;\n      z-index: -1;\n    }\n  }\n`;\n\nexport const useCodeEditor = ({\n  language,\n  content,\n}: {\n  language: string;\n  content: string;\n}) => {\n  const [_content, setContent] = useState(content);\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [_content]);\n  return {\n    content: _content,\n    setContent,\n    language,\n  };\n};\nconst CodeEditor: React.FC<{\n  language: string;\n  content: string;\n  setContent: (content: string) => void;\n}> = ({ content, setContent, language }) => (\n  <Wrapper>\n    <div className=\"editor\">\n      <div className=\"title\">{language}</div>\n      <pre className=\"sync\">\n        <code className={`language-${language}`}>{content}</code>\n      </pre>\n      <textarea\n        value={content}\n        className=\"sync\"\n        onChange={(e: any) => setContent(e.target.value)}\n      />\n    </div>\n  </Wrapper>\n);\n\nexport default CodeEditor;\n"]},"metadata":{},"sourceType":"module"}