{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from \"../../components/page\";\nimport LiveEditor from \"../../components/liveEditor\";\nimport ReactMarkdown from \"react-markdown\";\nimport styled from \"styled-components\";\nimport { pulckHtmlCss } from \"../../lib/transform\";\n\nvar _MDWapper = styled.div.withConfig({\n  displayName: \"page___MDWapper\",\n  componentId: \"mxv6kk-0\"\n})([\"h1,h2,h3,h4{color:var(--theme-color);}\"]);\n\nvar MarkdownBlock = function MarkdownBlock(_ref) {\n  var content = _ref.content;\n  return __jsx(_MDWapper, null, __jsx(ReactMarkdown, {\n    source: content\n  }));\n}; // これでlinkを外から入れらるようになった。\n// mdからメニューを取得してページングできるはず。\n// ぱすぱらむを取得すれば（static prposで)\n\n\nvar createProps = function createProps(sections) {\n  return {\n    LinkComponent: function LinkComponent(item) {\n      return __jsx(\"span\", null, __jsx(\"a\", {\n        href: item.item.path\n      }, item.item.title));\n    },\n    sections: sections\n  };\n};\n\nvar Page = function Page(_ref2) {\n  var _post$contents$find;\n\n  var post = _ref2.post,\n      sections = _ref2.sections;\n  var menuProps = createProps(sections);\n  var commonCSS = pulckHtmlCss(((_post$contents$find = post.contents.find(function (c) {\n    return c.type === \"common-css\";\n  })) === null || _post$contents$find === void 0 ? void 0 : _post$contents$find.value) || \"\").css;\n\n  var Content = function Content() {\n    return __jsx(\"div\", {\n      style: {\n        padding: \"40px\"\n      }\n    }, post.contents.map(function (content, i) {\n      var key = \"\".concat(content.type, \"-\").concat(i);\n\n      if (content.type === \"markdown\" || content.type === \"common-css\") {\n        return __jsx(MarkdownBlock, {\n          key: key,\n          content: content.value\n        });\n      }\n\n      if (content.type === \"frontmatter\") {\n        return __jsx(_MDWapper, {\n          key: key\n        }, __jsx(\"h1\", null, content.value.title));\n      }\n\n      return __jsx(LiveEditor, _extends({\n        key: key\n      }, _objectSpread({\n        commonCSS: commonCSS\n      }, content.value)));\n    }));\n  };\n\n  return __jsx(App, {\n    content: __jsx(Content, null),\n    menu: menuProps\n  });\n};\n\nexport var __N_SSG = true;\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}